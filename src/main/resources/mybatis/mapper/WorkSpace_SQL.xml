<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.workspace.mapper.WorkSpaceMapper">


	<sql id="proj">
		<if test="projNo == null and projNo  == ''">
	
		</if>
		<if test="projNo != null and projNo  != ''">
				AND TK.PROJ_NO = #{projNo}
		</if>
	</sql>
	<select id="myWorklist"
		resultType="kr.or.ddit.workspace.vo.WorkSpaceVO"
		parameterType="hashMap">
		    WITH X AS (
		    SELECT 
		        ROW_NUMBER() OVER (ORDER BY TK.TASK_NO DESC) AS RNUM
			        , PJ.PROJ_NO
			        , PJ.PROJ_NAME
				    , PJ.PROJ_CONTENT
				    , PJ.PROJ_MAN
				    , PJ.PROJ_TYPE
				    , PJ.PROJ_CREATE_DATE
				    , PJ.CONTRACT_NO
                    , TK.TASK_TYPE
                    , TK.START_DATE
                    , TK.END_DATE
                    , TK.TASK_STATUS
                    , TK.PERCENT
                    , TK.EMP_NO
                    , TK.TASK_NO
                    , TK.IMPORTANT
                    , EP.EMP_NAME
		    FROM PROJ PJ
		    INNER JOIN TASK TK ON PJ.PROJ_NO = TK.PROJ_NO
		    INNER JOIN PROJ_MASTER PM ON PM.PROJ_NO = TK.PROJ_NO 
		    		<include refid="proj"></include>
		    INNER JOIN EMPLOYEE EP ON TK.EMP_NO = EP.EMP_NO 
			        AND PM.DEPT_NO = #{deptNo}
                    AND TK.EMP_NO = #{empNo}
			)
			SELECT X.*
			FROM X
			WHERE X.RNUM BETWEEN (#{currentPage} - 1) * 3 + 1 AND #{currentPage} * 3
		</select>
	<select id="deptWorklist" resultType="kr.or.ddit.workspace.vo.WorkSpaceVO"
		parameterType="hashMap">
	        WITH X AS (
		    SELECT 
		        ROW_NUMBER() OVER (ORDER BY TK.TASK_NO DESC) AS RNUM
			        , PJ.PROJ_NO
			        , PJ.PROJ_NAME
				    , PJ.PROJ_CONTENT
				    , PJ.PROJ_MAN
				    , PJ.PROJ_TYPE
				    , PJ.PROJ_CREATE_DATE
				    , PJ.CONTRACT_NO
                    , TK.TASK_TYPE
                    , TK.START_DATE
                    , TK.END_DATE
                    , TK.TASK_STATUS
                    , TK.PERCENT
                    , TK.EMP_NO
                    , TK.TASK_NO
                    , TK.IMPORTANT
                    , EP.EMP_NAME
		    FROM PROJ PJ
		    INNER JOIN TASK TK ON PJ.PROJ_NO = TK.PROJ_NO
		    	<include refid="proj"></include>
		    INNER JOIN PROJ_MASTER PM ON PM.PROJ_NO = TK.PROJ_NO 
		    INNER JOIN EMPLOYEE EP ON TK.EMP_NO = EP.EMP_NO 
			        AND PM.DEPT_NO = #{deptNo}
			)
			SELECT X.*
			FROM X
			WHERE X.RNUM BETWEEN (#{currentPage} - 1) * 3 + 1 AND #{currentPage} * 3
		
		</select>
		<select id="projList" parameterType="hashMap" resultType="kr.or.ddit.workspace.vo.WorkSpaceVO">
			SELECT * 
            FROM PROJ PJ INNER JOIN PROJ_MASTER PM
            ON PJ.PROJ_NO = PM.PROJ_NO 
            AND PM.DEPT_NO = #{deptNo}
		
		
		</select>
		<select id="getTotal" parameterType="hashMap" resultType="int">
		
			WITH X AS (
		    SELECT 
		        ROW_NUMBER() OVER (ORDER BY PJ.PROJ_NO) AS RNUM
			        , PJ.PROJ_NO
			        , PJ.PROJ_NAME
				    , PJ.PROJ_CONTENT
				    , PJ.PROJ_MAN
				    , PJ.PROJ_TYPE
				    , PJ.PROJ_CREATE_DATE
				    , PJ.CONTRACT_NO
                    , TK.TASK_TYPE
                    , TK.START_DATE
                    , TK.END_DATE
                    , TK.TASK_STATUS
                    , TK.PERCENT
                    , TK.EMP_NO
                    , TK.TASK_NO
                    , TK.IMPORTANT
                    , EP.EMP_NAME
		    FROM PROJ PJ
		    INNER JOIN TASK TK ON PJ.PROJ_NO = TK.PROJ_NO
		    INNER JOIN PROJ_MASTER PM ON PM.PROJ_NO = TK.PROJ_NO 
		    INNER JOIN EMPLOYEE EP ON TK.EMP_NO = EP.EMP_NO 
			        AND PM.DEPT_NO = #{deptNo}
                    AND TK.EMP_NO = #{empNo}
			)
		SELECT COUNT (*)
			FROM X
		
		</select>
		<select id="deptGetTotal" parameterType="hashMap" resultType="int">
		    WITH X AS (
		   		SELECT 
			        ROW_NUMBER() OVER (ORDER BY PJ.PROJ_NO) AS RNUM,
			        PJ.PROJ_NO, 
			        PJ.PROJ_NAME, 
			        PJ.PROJ_CONTENT, 
			        PJ.PROJ_MAN, 
			        PJ.PROJ_TYPE,
			        PJ.PROJ_CREATE_DATE, 
			        PJ.CONTRACT_NO
			        
			    FROM PROJ PJ
			    INNER JOIN TASK TK ON PJ.PROJ_NO = TK.PROJ_NO
			    	<include refid="proj"></include>
			    INNER JOIN PROJ_MASTER PM ON PM.PROJ_NO = TK.PROJ_NO 
			        AND PM.DEPT_NO = #{deptNo}
			)
			SELECT COUNT(*)
			FROM X
		
		
		</select>
		
		<select id="projTotal" parameterType="kr.or.ddit.workspace.vo.WorkSpaceVO" resultType="kr.or.ddit.workspace.vo.WorkSpaceVO">
			    SELECT 
                 COUNT(CASE WHEN PM.PROJ_STATE = 0 THEN 1 END) AS CONCLUDED, 
			    COUNT(CASE WHEN PM.PROJ_STATE = 1 THEN 1 END) AS INPROGRESS,
			    COUNT(CASE WHEN PM.PROJ_STATE = 2 THEN 1 END) AS COMPLETED,
			    COUNT(PM.PROJ_STATE) TOTAL
                FROM PROJ PJ INNER JOIN PROJ_MASTER PM 
                ON PJ.PROJ_NO = PM.PROJ_NO 
			    AND PM.DEPT_NO = #{deptNo}
		
		</select>
		
		<insert id="createWork" parameterType="kr.or.ddit.workspace.vo.WorkSpaceVO">
				  INSERT INTO TASK (
                        TASK_NO,
                        TASK_TYPE,
                        START_DATE,
                        END_DATE,
                        TASK_STATUS,
                        PERCENT,
                        EMP_NO,
                        PROJ_NO,
                        IMPORTANT,
                        TASK_MEMO
	            ) VALUES ( task_no_seq.NEXTVAL,
	                        #{taskType},
	                        #{startDate},
	                        #{endDate},
	                        #{taskStatus},
	                        #{percent},
	                        #{empNo},
	                        #{projNo},
	                        #{important},
	                        #{taskMemo})
		
		
		
		</insert>
		<select id="workDetail" parameterType="kr.or.ddit.workspace.vo.WorkSpaceVO">
			SELECT TK.TASK_TYPE,
            TO_CHAR(TK.START_DATE, 'YYYY-MM-DD') AS START_DATE,  
    TO_CHAR(TK.END_DATE, 'YYYY-MM-DD') AS END_DATE
    ,TK.TASK_STATUS
                , TK.PERCENT, TK.EMP_NO, TK.TASK_NO, TK.PROJ_NO
                , TK.IMPORTANT, TK.TASK_MEMO ,PJ.PROJ_NAME ,PJ.CONTRACT_NO
                , PJ.PROJ_CONTENT
              	 , EP.EMP_NAME
              FROM TASK TK INNER JOIN PROJ PJ 
              ON TK.PROJ_NO = PJ.PROJ_NO
              INNER JOIN EMPLOYEE EP 
              ON TK.EMP_NO = EP.EMP_NO
              WHERE TASK_NO = #{taskNo}
		
		
		</select>

</mapper>